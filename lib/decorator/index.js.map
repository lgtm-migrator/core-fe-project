{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/decorator/index.ts"],"names":[],"mappings":";AAIA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AACpC,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAClC,OAAO,EAAC,GAAG,EAAC,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAC,6BAA6B,EAAC,MAAM,iCAAiC,CAAC;AAC9E,OAAO,EAAC,8BAA8B,EAAC,MAAM,kCAAkC,CAAC;AAWhF;;GAEG;AACH,MAAM,UAAU,4BAA4B,CAAkC,WAA0C;IACpH,OAAO,UAAC,MAAM,EAAE,WAAW,EAAE,UAAU;QACnC,IAAM,EAAE,GAAG,UAAU,CAAC,KAAM,CAAC;QAC7B,UAAU,CAAC,KAAK,GAAG;;;YAAW,cAAc;yBAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;;;;wBAClC,OAAO,GAA8B,EAAE,CAAC,IAAI,OAAP,EAAE,iBAAM,IAAI,UAAK,IAAI,UAAQ,CAAC;wBACzE,iDAAiD;wBACjD,uGAAuG;wBACvG,OAAO,CAAC,UAAU,GAAI,UAAU,CAAC,KAAa,CAAC,UAAU,CAAC;wBAC1D,OAAO,CAAC,YAAY,GAAG,iBAAiB,8BAAC,CAAA,MAAA,GAAG,CAAC,YAAY,0CAAE,cAAc,KAAI,EAAE,EAAE,KAAK,UAAK,IAAI,cAAK,gBAAgB,CAAC;wBACrH,sBAAA,SAAO,WAAW,CAAC,OAAO,EAAE,IAAW,CAAC,CAAA,EAAA;;wBAAxC,SAAwC,CAAC;;;;SAC5C,CAAC;QACF,OAAO,UAAU,CAAC;IACtB,CAAC,CAAC;AACN,CAAC","sourcesContent":["import {ActionHandler} from \"../module\";\nimport {Module} from \"../platform/Module\";\nimport {SagaGenerator} from \"../typed-saga\";\nimport {State} from \"../reducer\";\nimport {app} from \"../app\";\nimport {stringifyWithMask} from \"../util/json-util\";\n\nexport {Interval} from \"./Interval\";\nexport {Loading} from \"./Loading\";\nexport {Log} from \"./Log\";\nexport {Mutex} from \"./Mutex\";\nexport {RetryOnNetworkConnectionError} from \"./RetryOnNetworkConnectionError\";\nexport {SilentOnNetworkConnectionError} from \"./SilentOnNetworkConnectionError\";\n\n/**\n * Decorator type declaration, required by TypeScript.\n */\ntype HandlerDecorator = (target: object, propertyKey: string, descriptor: TypedPropertyDescriptor<ActionHandler>) => TypedPropertyDescriptor<ActionHandler>;\n\ntype ActionHandlerWithMetaData = ActionHandler & {actionName: string; maskedParams: string};\n\ntype HandlerInterceptor<RootState extends State = State> = (handler: ActionHandlerWithMetaData, thisModule: Module<RootState, any>) => SagaGenerator;\n\n/**\n * A helper for ActionHandler functions (Saga).\n */\nexport function createActionHandlerDecorator<RootState extends State = State>(interceptor: HandlerInterceptor<RootState>): HandlerDecorator {\n    return (target, propertyKey, descriptor) => {\n        const fn = descriptor.value!;\n        descriptor.value = function* (...args: any[]): SagaGenerator {\n            const boundFn: ActionHandlerWithMetaData = fn.bind(this, ...args) as any;\n            // Do not use fn.actionName, it returns undefined\n            // The reason is, fn is created before module register(), and the actionName had not been attached then\n            boundFn.actionName = (descriptor.value as any).actionName;\n            boundFn.maskedParams = stringifyWithMask(app.loggerConfig?.maskedKeywords || [], \"***\", ...args) || \"[No Parameter]\";\n            yield* interceptor(boundFn, this as any);\n        };\n        return descriptor;\n    };\n}\n"]}