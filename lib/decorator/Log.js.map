{"version":3,"file":"Log.js","sourceRoot":"","sources":["../../src/decorator/Log.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,4BAA4B,EAAC,MAAM,SAAS,CAAC;AAErD;;GAEG;AACH,MAAM,UAAU,GAAG;IACf,OAAO,4BAA4B,CAAC,UAAW,OAAO,EAAE,UAAU;;;;;oBACxD,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;;;oBAEzB,sBAAA,SAAO,OAAO,EAAE,CAAA,EAAA;;oBAAhB,SAAgB,CAAC;;;oBAEjB,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;wBACnB,MAAM,EAAE,OAAO,CAAC,UAAU;wBAC1B,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;wBACnC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,CAAC,YAAY,EAAC;qBACxC,CAAC,CAAC;;;;;KAEV,CAAC,CAAC;AACP,CAAC","sourcesContent":["import {createActionHandlerDecorator} from \"./index\";\n\n/**\n * To add a log item for action, with execution duration, action name, and masked action parameters.\n */\nexport function Log() {\n    return createActionHandlerDecorator(function* (handler, thisModule) {\n        const startTime = Date.now();\n        try {\n            yield* handler();\n        } finally {\n            thisModule.logger.info({\n                action: handler.actionName,\n                elapsedTime: Date.now() - startTime,\n                info: {payload: handler.maskedParams},\n            });\n        }\n    });\n}\n"]}