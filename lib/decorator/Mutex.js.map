{"version":3,"file":"Mutex.js","sourceRoot":"","sources":["../../src/decorator/Mutex.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,4BAA4B,EAAC,MAAM,SAAS,CAAC;AAErD;;;GAGG;AACH,MAAM,UAAU,KAAK;IACjB,IAAI,QAAQ,GAAkB,IAAI,CAAC;IACnC,OAAO,4BAA4B,CAAC,UAAW,OAAO,EAAE,UAAU;;;;yBAC1D,QAAQ,EAAR,wBAAQ;oBACR,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;wBACnB,MAAM,EAAE,OAAO,CAAC,UAAU;wBAC1B,IAAI,EAAE;4BACF,OAAO,EAAE,OAAO,CAAC,YAAY;4BAC7B,qBAAqB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC,QAAQ,EAAE;yBAC5D;qBACJ,CAAC,CAAC;;;;oBAGC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBACtB,sBAAA,SAAO,OAAO,EAAE,CAAA,EAAA;;oBAAhB,SAAgB,CAAC;;;oBAEjB,QAAQ,GAAG,IAAI,CAAC;;;;;KAG3B,CAAC,CAAC;AACP,CAAC","sourcesContent":["import {createActionHandlerDecorator} from \"./index\";\n\n/**\n * If specified, the action cannot be entered by other sagas during execution.\n * For error handler action, mutex logic is auto added.\n */\nexport function Mutex() {\n    let lockTime: number | null = null;\n    return createActionHandlerDecorator(function* (handler, thisModule) {\n        if (lockTime) {\n            thisModule.logger.info({\n                action: handler.actionName,\n                info: {\n                    payload: handler.maskedParams,\n                    mutex_locked_duration: (Date.now() - lockTime).toString(),\n                },\n            });\n        } else {\n            try {\n                lockTime = Date.now();\n                yield* handler();\n            } finally {\n                lockTime = null;\n            }\n        }\n    });\n}\n"]}