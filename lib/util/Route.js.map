{"version":3,"file":"Route.js","sourceRoot":"","sources":["../../src/util/Route.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAC,QAAQ,EAAE,KAAK,IAAI,mBAAmB,EAAkC,MAAM,kBAAkB,CAAC;AACzG,OAAO,EAAC,aAAa,EAAC,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAW3B;IAA2B,yBAA0B;IAArD;QAAA,qEAyBC;QAfG,iCAA2B,GAAG,UAAC,KAA+B;YACpD,IAAA,KAAoF,KAAI,CAAC,KAAK,EAA7F,SAAS,eAAA,EAAE,eAAe,qBAAA,EAAE,sBAAsB,4BAAA,EAAE,QAAQ,cAAA,EAAE,iBAAiB,uBAAc,CAAC;YACrG,IAAI,eAAe,EAAE;gBACjB,IAAM,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/E,IAAM,SAAS,GAAG,oBAAC,gBAAgB,eAAK,KAAK,EAAI,CAAC;gBAClD,OAAO,iBAAiB,CAAC,CAAC,CAAC,oBAAC,aAAa,QAAE,SAAS,CAAiB,CAAC,CAAC,CAAC,SAAS,CAAC;aACrF;iBAAM;gBACH,OAAO,oBAAC,QAAQ,IAAC,EAAE,EAAE,sBAAsB,GAAI,CAAC;aACnD;QACL,CAAC,CAAC;;IAMN,CAAC;IAJY,sBAAM,GAAf;QACI,IAAM,KAAiC,IAAI,CAAC,KAAK,EAA1C,SAAS,eAAA,EAAK,cAAc,cAA7B,aAA8B,CAAa,CAAC;QAClD,OAAO,oBAAC,mBAAmB,eAAK,cAAc,IAAE,MAAM,EAAE,IAAI,CAAC,2BAA2B,IAAI,CAAC;IACjG,CAAC;IAvBM,kBAAY,GAAyH;QACxI,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,IAAI;QACf,iBAAiB,EAAE,IAAI;QACvB,eAAe,EAAE,IAAI;QACrB,sBAAsB,EAAE,GAAG;QAC3B,QAAQ,EAAE,KAAK;KAClB,CAAC;IAiBN,YAAC;CAAA,AAzBD,CAA2B,KAAK,CAAC,aAAa,GAyB7C;SAzBY,KAAK;AA2BlB,SAAS,mBAAmB,CAAe,gBAAwC;IAC/E;QAAqB,2BAAsB;QAApC;;QAcP,CAAC;QAbY,mCAAiB,GAA1B;YACI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBACZ,MAAM,EAAE,uBAAuB;gBAC/B,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,UAAG,QAAQ,CAAC,IAAI,8BAA2B;gBACzD,SAAS,EAAE,iBAAiB;gBAC5B,IAAI,EAAE,EAAE;aACX,CAAC,CAAC;QACP,CAAC;QAEQ,wBAAM,GAAf;YACI,OAAO,oBAAC,gBAAgB,eAAK,IAAI,CAAC,KAAK,EAAI,CAAC;QAChD,CAAC;QACL,cAAC;IAAD,CAAC,AAdM,CAAc,KAAK,CAAC,aAAa,GActC;AACN,CAAC","sourcesContent":["import React from \"react\";\nimport {Redirect, Route as ReactRouterDOMRoute, RouteComponentProps, RouteProps} from \"react-router-dom\";\nimport {ErrorBoundary} from \"./ErrorBoundary\";\nimport {app} from \"../app\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n    // All below are optional\n    withErrorBoundary: boolean;\n    accessCondition: boolean;\n    unauthorizedRedirectTo: string;\n    notFound: boolean;\n}\n\nexport class Route extends React.PureComponent<Props> {\n    static defaultProps: Pick<Props, \"exact\" | \"sensitive\" | \"withErrorBoundary\" | \"accessCondition\" | \"unauthorizedRedirectTo\" | \"notFound\"> = {\n        exact: true,\n        sensitive: true,\n        withErrorBoundary: true,\n        accessCondition: true,\n        unauthorizedRedirectTo: \"/\",\n        notFound: false,\n    };\n\n    renderRegularRouteComponent = (props: RouteComponentProps<any>): React.ReactElement => {\n        const {component, accessCondition, unauthorizedRedirectTo, notFound, withErrorBoundary} = this.props;\n        if (accessCondition) {\n            const WrappedComponent = notFound ? withNotFoundWarning(component) : component;\n            const routeNode = <WrappedComponent {...props} />;\n            return withErrorBoundary ? <ErrorBoundary>{routeNode}</ErrorBoundary> : routeNode;\n        } else {\n            return <Redirect to={unauthorizedRedirectTo} />;\n        }\n    };\n\n    override render() {\n        const {component, ...restRouteProps} = this.props;\n        return <ReactRouterDOMRoute {...restRouteProps} render={this.renderRegularRouteComponent} />;\n    }\n}\n\nfunction withNotFoundWarning<T extends {}>(WrappedComponent: React.ComponentType<T>): React.ComponentType<T> {\n    return class extends React.PureComponent<T> {\n        override componentDidMount() {\n            app.logger.warn({\n                action: \"@@framework/route-404\",\n                elapsedTime: 0,\n                errorMessage: `${location.href} not supported by <Route>`,\n                errorCode: \"ROUTE_NOT_FOUND\",\n                info: {},\n            });\n        }\n\n        override render() {\n            return <WrappedComponent {...this.props} />;\n        }\n    };\n}\n"]}