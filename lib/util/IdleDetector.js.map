{"version":3,"file":"IdleDetector.js","sourceRoot":"","sources":["../../src/util/IdleDetector.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAQ,gBAAgB,EAAY,MAAM,YAAY,CAAC;AAC9D,OAAO,EAAC,WAAW,EAAE,WAAW,EAAC,MAAM,aAAa,CAAC;AAErD,MAAM,CAAC,IAAM,oBAAoB,GAAG,GAAG,CAAC;AAMxC,MAAM,CAAC,IAAM,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAY;IAC9D,OAAO,EAAE,oBAAoB;IAC7B,KAAK,EAAE,QAAQ;CAClB,CAAC,CAAC;AAEH,SAAS,WAAW,CAAC,IAAY,EAAE,QAAiD;IAChF,IAAI,KAAa,CAAC;IAElB,SAAS,KAAK;QACV,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,QAAQ,CAAC,MAAM,CAAC,EAAhB,CAAgB,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,SAAS,KAAK;QACV,YAAY,CAAC,KAAK,CAAC,CAAC;QACpB,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnB,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,SAAS,KAAK;QACV,YAAY,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,EAAC,KAAK,OAAA,EAAE,KAAK,OAAA,EAAE,KAAK,OAAA,EAAC,CAAC;AACjC,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAY;IAC9B,IAAA,QAAQ,GAAI,KAAK,SAAT,CAAU;IACnB,IAAA,KAAmB,WAAW,CAAC,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,IAAI,EAAV,CAAU,CAAC,EAA3D,OAAO,aAAA,EAAE,KAAK,WAA6C,CAAC;IACnE,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;IAEzB,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,KAAK,CAAC,SAAS,CAAC;QACZ,IAAI,OAAO,GAAG,CAAC,EAAE;YACb,IAAM,WAAS,GAAG,WAAW,CAAC,OAAO,EAAE,UAAC,YAAY;gBAChD,IAAI,YAAY,KAAK,QAAQ,CAAC,OAAO,EAAE;oBACnC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC5C;YACL,CAAC,CAAC,CAAC;YACH,WAAS,CAAC,KAAK,EAAE,CAAC;YAClB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;YAEtD,OAAO;gBACH,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;gBACrD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;gBACzD,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;gBACvD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAS,CAAC,KAAK,CAAC,CAAC;gBACzD,WAAS,CAAC,KAAK,EAAE,CAAC;YACtB,CAAC,CAAC;SACL;IACL,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,OAAO,oBAAC,mBAAmB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAC,KAAK,OAAA,EAAE,OAAO,SAAA,EAAC,IAAG,QAAQ,CAAgC,CAAC;AAC5G,CAAC","sourcesContent":["import React from \"react\";\nimport {State, idleStateActions, IdleState} from \"../reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const DEFAULT_IDLE_TIMEOUT = 300;\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nexport const IdleDetectorContext = React.createContext<IdleState>({\n    timeout: DEFAULT_IDLE_TIMEOUT,\n    state: \"active\",\n});\n\nfunction createTimer(time: number, callback: (idleState: IdleState[\"state\"]) => void) {\n    let timer: number;\n\n    function start() {\n        timer = window.setTimeout(() => callback(\"idle\"), time * 1000);\n    }\n\n    function reset() {\n        clearTimeout(timer);\n        callback(\"active\");\n        start();\n    }\n\n    function clear() {\n        clearTimeout(timer);\n    }\n\n    return {start, reset, clear};\n}\n\nexport function IdleDetector(props: Props) {\n    const {children} = props;\n    const {timeout, state} = useSelector((state: State) => state.idle);\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        if (timeout > 0) {\n            const idleTimer = createTimer(timeout, (newIdleState) => {\n                if (newIdleState !== stateRef.current) {\n                    dispatch(idleStateActions(newIdleState));\n                }\n            });\n            idleTimer.start();\n            window.addEventListener(\"click\", idleTimer.reset);\n            window.addEventListener(\"touchmove\", idleTimer.reset);\n            window.addEventListener(\"keydown\", idleTimer.reset);\n            window.addEventListener(\"mousemove\", idleTimer.reset);\n\n            return () => {\n                window.removeEventListener(\"click\", idleTimer.reset);\n                window.removeEventListener(\"touchmove\", idleTimer.reset);\n                window.removeEventListener(\"keydown\", idleTimer.reset);\n                window.removeEventListener(\"mousemove\", idleTimer.reset);\n                idleTimer.clear();\n            };\n        }\n    }, [timeout]);\n\n    return <IdleDetectorContext.Provider value={{state, timeout}}>{children}</IdleDetectorContext.Provider>;\n}\n"]}