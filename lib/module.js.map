{"version":3,"file":"module.js","sourceRoot":"","sources":["../src/module.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,GAAG,EAAC,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAC,WAAW,EAAC,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAS,cAAc,EAAC,MAAM,WAAW,CAAC;AAEjD,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,iBAAiB,EAAC,MAAM,kBAAkB,CAAC;AAkBnD,MAAM,UAAU,QAAQ,CAA6B,MAAS;IAC1D,IAAM,UAAU,GAAW,MAAM,CAAC,IAAI,CAAC;IACvC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;QACvC,0BAA0B;QAC1B,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,EAAE,YAAK,UAAU,YAAS,CAAC,CAAC,CAAC;KACjG;IAED,4CAA4C;IAC5C,IAAM,OAAO,GAAQ,EAAE,CAAC;IACxB,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,UAAU;QAC/B,0DAA0D;QAC1D,IAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAClC,IAAM,mBAAmB,GAAG,UAAG,UAAU,cAAI,UAAU,CAAE,CAAC;QAC1D,MAAM,CAAC,UAAU,GAAG,mBAAmB,CAAC;QACxC,OAAO,CAAC,UAAU,CAAC,GAAG;YAAC,iBAAiB;iBAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;gBAAjB,4BAAiB;;YAAoB,OAAA,CAAC,EAAC,IAAI,EAAE,mBAAmB,EAAE,OAAO,SAAA,EAAC,CAAC;QAAtC,CAAsC,CAAC;QAEnG,GAAG,CAAC,cAAc,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,UAAW,aAAa,CAAC,UAAkB,EAAE,OAAsB;;;IAAE,iBAAiB;iBAAjB,qBAAiB,EAAjB,IAAiB;QAAjB,gCAAiB;;;;;;gBAEpF,sBAAA,SAAO,OAAO,wCAAI,OAAO,WAAC,EAAA;;gBAA1B,SAA0B,CAAC;;;;gBAErB,aAAa,GAAG,iBAAiB,8BAAC,CAAA,MAAA,GAAG,CAAC,YAAY,0CAAE,cAAc,KAAI,EAAE,EAAE,KAAK,UAAK,OAAO,cAAK,gBAAgB,CAAC;gBACvH,YAAY,CAAC,OAAK,EAAE,UAAU,EAAE,EAAC,aAAa,eAAA,EAAC,CAAC,CAAC;;;;;CAExD;AAED,SAAS,OAAO,CAA6B,MAAS;;IAClD,kGAAkG;IAClG,IAAM,IAAI,GAAa,EAAE,CAAC;;QAC1B,KAA2B,IAAA,KAAA,SAAA,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAA,gBAAA,4BAAE;YAAjF,IAAM,YAAY,WAAA;YACnB,IAAI,MAAM,CAAC,YAAY,CAAC,YAAY,QAAQ,IAAI,YAAY,KAAK,aAAa,EAAE;gBAC5E,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC3B;SACJ;;;;;;;;;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","sourcesContent":["import {app} from \"./app\";\nimport {Exception} from \"./Exception\";\nimport {Module, ModuleLifecycleListener} from \"./platform/Module\";\nimport {ModuleProxy} from \"./platform/ModuleProxy\";\nimport {Action, setStateAction} from \"./reducer\";\nimport {SagaGenerator} from \"./typed-saga\";\nimport {captureError} from \"./util/error-util\";\nimport {stringifyWithMask} from \"./util/json-util\";\n\nexport interface TickIntervalDecoratorFlag {\n    tickInterval?: number;\n}\n\nexport type ActionHandler = (...args: any[]) => SagaGenerator;\n\nexport type ErrorHandler = (error: Exception) => SagaGenerator;\n\nexport interface ErrorListener {\n    onError: ErrorHandler;\n}\n\ntype ActionCreator<H> = H extends (...args: infer P) => SagaGenerator ? (...args: P) => Action<P> : never;\ntype HandlerKeys<H> = {[K in keyof H]: H[K] extends (...args: any[]) => SagaGenerator ? K : never}[Exclude<keyof H, keyof ModuleLifecycleListener | keyof ErrorListener>];\nexport type ActionCreators<H> = {readonly [K in HandlerKeys<H>]: ActionCreator<H[K]>};\n\nexport function register<M extends Module<any, any>>(module: M): ModuleProxy<M> {\n    const moduleName: string = module.name;\n    if (!app.store.getState().app[moduleName]) {\n        // To get private property\n        app.store.dispatch(setStateAction(moduleName, module.initialState, `@@${moduleName}/@@init`));\n    }\n\n    // Transform every method into ActionCreator\n    const actions: any = {};\n    getKeys(module).forEach((actionType) => {\n        // Attach action name, for @Log / error handler reflection\n        const method = module[actionType];\n        const qualifiedActionType = `${moduleName}/${actionType}`;\n        method.actionName = qualifiedActionType;\n        actions[actionType] = (...payload: any[]): Action<any[]> => ({type: qualifiedActionType, payload});\n\n        app.actionHandlers[qualifiedActionType] = method.bind(module);\n    });\n\n    return new ModuleProxy(module, actions);\n}\n\nexport function* executeAction(actionName: string, handler: ActionHandler, ...payload: any[]): SagaGenerator {\n    try {\n        yield* handler(...payload);\n    } catch (error) {\n        const actionPayload = stringifyWithMask(app.loggerConfig?.maskedKeywords || [], \"***\", ...payload) || \"[No Parameter]\";\n        captureError(error, actionName, {actionPayload});\n    }\n}\n\nfunction getKeys<M extends Module<any, any>>(module: M) {\n    // Do not use Object.keys(Object.getPrototypeOf(module)), because class methods are not enumerable\n    const keys: string[] = [];\n    for (const propertyName of Object.getOwnPropertyNames(Object.getPrototypeOf(module))) {\n        if (module[propertyName] instanceof Function && propertyName !== \"constructor\") {\n            keys.push(propertyName);\n        }\n    }\n    return keys;\n}\n"]}