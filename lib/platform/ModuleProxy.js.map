{"version":3,"file":"ModuleProxy.js","sourceRoot":"","sources":["../../src/platform/ModuleProxy.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAC,KAAK,EAAE,IAAI,IAAI,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,oBAAoB,CAAC;AACtF,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAiB,aAAa,EAAC,MAAM,WAAW,CAAC;AACxD,OAAO,EAAC,iBAAiB,EAAE,0BAA0B,EAAQ,MAAM,YAAY,CAAC;AAIhF,IAAI,iBAAiB,GAAkB,IAAI,CAAC;AAE5C;IACI,qBAAoB,MAAS,EAAU,OAA0B;QAA7C,WAAM,GAAN,MAAM,CAAG;QAAU,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAErE,gCAAU,GAAV;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,qCAAe,GAAf,UAAkC,aAAqC;;QACnE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAc,CAAC;QAC9C,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAiC,CAAC;QACjE,IAAM,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QACjE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAc,CAAC;QAEpC;gBAAqB,2BAAsB;gBAOvC,iBAAY,KAAQ;oBAApB,YACI,kBAAM,KAAK,CAAC,SAIf;oBAVO,uBAAiB,GAAgB,IAAI,CAAC;oBACtC,2BAAqB,GAAgB,IAAI,CAAC;oBAC1C,eAAS,GAAW,CAAC,CAAC;oBACtB,iBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;oBAiFjC,uBAAiB,GAAG,UAAC,CAAW,EAAE,CAAW;wBACjD,OAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC;oBAC7H,CAAC,CAAC;oBAEM,qBAAe,GAAG,UAAC,UAAyC;wBAChE,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;oBAC7E,CAAC,CAAC;oBAnFE,IAAI,CAAC,iBAAiB,EAAE;wBACpB,iBAAiB,GAAG,UAAU,CAAC;qBAClC;;gBACL,CAAC;gBAEQ,mCAAiB,GAA1B;oBACI,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnF,CAAC;gBAEQ,oCAAkB,GAA3B,UAA4B,SAAsB;;oBAC9C,IAAM,YAAY,GAAI,SAAiB,CAAC,QAAQ,CAAC;oBACjD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAgC,CAAC;oBACpD,IAAM,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC;oBACvC,IAAM,kBAAkB,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;oBAEnE;;;;;;uBAMG;oBACH,IAAI,eAAe,IAAI,kBAAkB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,EAAE;wBAC9I,IAAI;4BACA,MAAA,IAAI,CAAC,qBAAqB,0CAAE,MAAM,EAAE,CAAC;yBACxC;wBAAC,OAAO,CAAC,EAAE;4BACR,gDAAgD;yBACnD;wBACD,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC;;;;;wCAC1C,MAAM,GAAG,UAAG,UAAU,wBAAqB,CAAC;wCAC5C,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wCAC7B,qBAAM,OAAO,CAAC,aAAa,EAAE,MAAM,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,kBAAkB,EAAE,eAAe,CAAC,EAAA;;wCAAtI,SAAsI,CAAC;wCACvI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;4CACZ,MAAM,QAAA;4CACN,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;4CACnC,IAAI,EAAE;gDACF,qEAAqE;gDACrE,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;gDAChD,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC;6CACvD;yCACJ,CAAC,CAAC;;;;yBACN,CAAC,CAAC;wBACH,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC;qBACzD;gBACL,CAAC;gBAEQ,sCAAoB,GAA7B;;oBACI,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;wBACnC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;qBAC3C;oBAED,IAAM,eAAe,GAAI,IAAI,CAAC,KAAa,CAAC,QAAQ,CAAC;oBACrD,IAAI,eAAe,EAAE;wBACjB,iFAAiF;wBACjF,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC;qBACzD;oBAED,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;wBACZ,MAAM,EAAE,UAAG,UAAU,eAAY;wBACjC,IAAI,EAAE;4BACF,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;4BACrC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;yBACtE;qBACJ,CAAC,CAAC;oBAEH,IAAI;wBACA,MAAA,IAAI,CAAC,qBAAqB,0CAAE,MAAM,EAAE,CAAC;wBACrC,MAAA,IAAI,CAAC,iBAAiB,0CAAE,MAAM,EAAE,CAAC;qBACpC;oBAAC,OAAO,CAAC,EAAE;wBACR,gDAAgD;qBACnD;gBACL,CAAC;gBAEQ,wBAAM,GAAf;oBACI,OAAO,oBAAC,aAAa,eAAK,IAAI,CAAC,KAAK,EAAI,CAAC;gBAC7C,CAAC;gBAUQ,+BAAa,GAAtB;;;;;gCAQU,KAAK,GAAG,IAAI,CAAC,KAAgC,CAAC;gCAE9C,eAAe,GAAG,UAAG,UAAU,aAAU,CAAC;gCAC1C,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gCAC7B,qBAAM,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,KAAK,CAAC,EAAA;;gCAAvG,SAAuG,CAAC;gCACxG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;oCACZ,MAAM,EAAE,eAAe;oCACvB,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;oCACnC,IAAI,EAAE;wCACF,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;qCACzC;iCACJ,CAAC,CAAC;qCAEC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,EAAzC,wBAAyC;qCACrC,CAAA,OAAO,IAAI,KAAK,IAAI,UAAU,IAAI,KAAK,CAAA,EAAvC,wBAAuC;gCACjC,uBAAuB,GAAG,UAAG,UAAU,wBAAqB,CAAC;gCAC7D,cAAY,IAAI,CAAC,GAAG,EAAE,CAAC;gCACvB,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;gCACvC,qBAAM,OAAO,CAAC,aAAa,EAAE,uBAAuB,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAA;;gCAA/I,SAA+I,CAAC;gCAChJ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;oCACZ,MAAM,EAAE,uBAAuB;oCAC/B,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,WAAS;oCACnC,IAAI,EAAE;wCACF,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;wCAChD,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;qCACtD;iCACJ,CAAC,CAAC;;;gCAEH,OAAO,CAAC,KAAK,CAAC,wCAAiC,UAAU,iEAA8D,CAAC,CAAC;;;gCAIjI,IAAI,UAAU,KAAK,iBAAiB,EAAE;oCAClC,2BAA2B,CAAC,UAAG,UAAU,oBAAiB,CAAC,CAAC;iCAC/D;qCAEG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAA9B,wBAA8B;gCAC9B,qBAAM,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAA;;gCAAhD,SAAgD,CAAC;;;;;iBAExD;gBAEQ,mCAAiB,GAA1B;;;;oCACoC,qBAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAA;;gCAAlE,mBAAmB,GAAS,SAAsC;;;qCAC/D,IAAI;gCACP,qBAAM,IAAI,CAAC,iBAAiB,CAAC,EAAA;;gCAA7B,SAA6B,CAAC;gCAC9B,qBAAM,MAAM,CAAC,mBAAmB,CAAC,EAAA;;gCAAjC,SAAiC,CAAC,CAAC,6BAA6B;gCACtC,qBAAM,MAAM,CAAC,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,EAA7B,CAA6B,CAAC,EAAA;;gCAAjF,QAAQ,GAAY,SAA6D;qCACnF,QAAQ,EAAR,wBAAQ;gCACc,qBAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAA;;gCAA5D,mBAAmB,GAAG,SAAsC,CAAC;;;;;;iBAGxE;gBAEQ,4BAAU,GAAnB;;;;;gCACU,yBAAyB,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;gCAChF,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gCAC/D,cAAc,GAAG,UAAG,UAAU,YAAS,CAAC;;;qCACvC,IAAI;gCACP,qBAAM,OAAO,CAAC,aAAa,EAAE,cAAc,EAAE,WAAW,CAAC,EAAA;;gCAAzD,SAAyD,CAAC;gCAC1D,IAAI,CAAC,SAAS,EAAE,CAAC;gCACjB,qBAAM,KAAK,CAAC,yBAAyB,CAAC,EAAA;;gCAAtC,SAAsC,CAAC;;;;;iBAE9C;gBACL,cAAC;YAAD,CAAC,AArKM,CAAc,KAAK,CAAC,aAAa;YAC7B,cAAW,GAAG,iBAAU,UAAU,MAAI;eAoK/C;IACN,CAAC;IACL,kBAAC;AAAD,CAAC,AApLD,IAoLC;;AAED,SAAS,2BAA2B,CAAC,UAAkB;;IACnD,IAAI,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,EAAE;QAC1C,4GAA4G;QAC5G,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC;QACtC,IAAM,UAAQ,GAAG,UAAU,CAAC,eAAe,CAAC;QAC5C,IAAM,QAAQ,GAAG,GAAG,GAAG,UAAQ,CAAC;QAChC,IAAM,OAAK,GAA4B,EAAE,CAAC;QAE1C,IAAM,UAAU,GAAG,UAAC,GAAW,EAAE,SAAiB;YAC9C,IAAI,SAAS,IAAI,UAAQ,EAAE;gBACvB,OAAK,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,UAAQ,CAAC;aACrC;QACL,CAAC,CAAC;QAEF,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC;QAClD,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;QAC/C,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;QAC/C,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC,mDAAmD;QACnH,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,8CAA8C;QAE9F,IAAM,oBAAoB,GAAG,CAAA,MAAA,GAAG,CAAC,YAAY,0CAAE,4BAA4B,KAAI,CAAC,CAAC;QACjF,IAAI,QAAQ,GAAG,IAAI,IAAI,oBAAoB,EAAE;YACzC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBACZ,MAAM,EAAE,UAAU;gBAClB,WAAW,EAAE,QAAQ;gBACrB,KAAK,SAAA;gBACL,SAAS,EAAE,cAAc;gBACzB,YAAY,EAAE,uBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,+BAAqB,oBAAoB,CAAE;aACxG,CAAC,CAAC;SACN;aAAM;YACH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBACZ,MAAM,EAAE,UAAU;gBAClB,WAAW,EAAE,QAAQ;gBACrB,KAAK,SAAA;aACR,CAAC,CAAC;SACN;KACJ;AACL,CAAC","sourcesContent":["import React from \"react\";\nimport {RouteComponentProps} from \"react-router\";\nimport {Task} from \"redux-saga\";\nimport {delay, call as rawCall, take, select, cancel, fork} from \"redux-saga/effects\";\nimport {app} from \"../app\";\nimport {ActionCreators, executeAction} from \"../module\";\nimport {IDLE_STATE_ACTION, navigationPreventionAction, State} from \"../reducer\";\nimport {Module, ModuleLifecycleListener} from \"./Module\";\nimport {Location} from \"history\";\n\nlet startupModuleName: string | null = null;\n\nexport class ModuleProxy<M extends Module<any, any>> {\n    constructor(private module: M, private actions: ActionCreators<M>) {}\n\n    getActions(): ActionCreators<M> {\n        return this.actions;\n    }\n\n    attachLifecycle<P extends object>(ComponentType: React.ComponentType<P>): React.ComponentType<P> {\n        const moduleName = this.module.name as string;\n        const lifecycleListener = this.module as ModuleLifecycleListener;\n        const modulePrototype = Object.getPrototypeOf(lifecycleListener);\n        const actions = this.actions as any;\n\n        return class extends React.PureComponent<P> {\n            static displayName = `Module[${moduleName}]`;\n            private lifecycleSagaTask: Task | null = null;\n            private lastDidUpdateSagaTask: Task | null = null;\n            private tickCount: number = 0;\n            private mountedTime: number = Date.now();\n\n            constructor(props: P) {\n                super(props);\n                if (!startupModuleName) {\n                    startupModuleName = moduleName;\n                }\n            }\n\n            override componentDidMount() {\n                this.lifecycleSagaTask = app.sagaMiddleware.run(this.lifecycleSaga.bind(this));\n            }\n\n            override componentDidUpdate(prevProps: Readonly<P>) {\n                const prevLocation = (prevProps as any).location;\n                const props = this.props as RouteComponentProps & P;\n                const currentLocation = props.location;\n                const currentRouteParams = props.match ? props.match.params : null;\n\n                /**\n                 * Only trigger onLocationMatched if current component is connected to <Route>, and location literally changed.\n                 *\n                 * CAVEAT:\n                 *  Do not use !== to compare locations.\n                 *  Because in \"connected-react-router\", location from rootState.router.location is not equal to current history.location in reference.\n                 */\n                if (currentLocation && currentRouteParams && !this.areLocationsEqual(currentLocation, prevLocation) && this.hasOwnLifecycle(\"onLocationMatched\")) {\n                    try {\n                        this.lastDidUpdateSagaTask?.cancel();\n                    } catch (e) {\n                        // In rare case, it may throw error, just ignore\n                    }\n                    this.lastDidUpdateSagaTask = app.sagaMiddleware.run(function* () {\n                        const action = `${moduleName}/@@LOCATION_MATCHED`;\n                        const startTime = Date.now();\n                        yield rawCall(executeAction, action, lifecycleListener.onLocationMatched.bind(lifecycleListener), currentRouteParams, currentLocation);\n                        app.logger.info({\n                            action,\n                            elapsedTime: Date.now() - startTime,\n                            info: {\n                                // URL params should not contain any sensitive or complicated objects\n                                route_params: JSON.stringify(currentRouteParams),\n                                history_state: JSON.stringify(currentLocation.state),\n                            },\n                        });\n                    });\n                    app.store.dispatch(navigationPreventionAction(false));\n                }\n            }\n\n            override componentWillUnmount() {\n                if (this.hasOwnLifecycle(\"onDestroy\")) {\n                    app.store.dispatch(actions.onDestroy());\n                }\n\n                const currentLocation = (this.props as any).location;\n                if (currentLocation) {\n                    // Only cancel navigation prevention if current component is connected to <Route>\n                    app.store.dispatch(navigationPreventionAction(false));\n                }\n\n                app.logger.info({\n                    action: `${moduleName}/@@DESTROY`,\n                    info: {\n                        tick_count: this.tickCount.toString(),\n                        staying_second: ((Date.now() - this.mountedTime) / 1000).toFixed(2),\n                    },\n                });\n\n                try {\n                    this.lastDidUpdateSagaTask?.cancel();\n                    this.lifecycleSagaTask?.cancel();\n                } catch (e) {\n                    // In rare case, it may throw error, just ignore\n                }\n            }\n\n            override render() {\n                return <ComponentType {...this.props} />;\n            }\n\n            private areLocationsEqual = (a: Location, b: Location): boolean => {\n                return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && a.state === b.state;\n            };\n\n            private hasOwnLifecycle = (methodName: keyof ModuleLifecycleListener): boolean => {\n                return Object.prototype.hasOwnProperty.call(modulePrototype, methodName);\n            };\n\n            private *lifecycleSaga() {\n                /**\n                 * CAVEAT:\n                 * Do not use <yield* executeAction> for lifecycle actions.\n                 * It will lead to cancellation issue, which cannot stop the lifecycleSaga as expected.\n                 *\n                 * https://github.com/redux-saga/redux-saga/issues/1986\n                 */\n                const props = this.props as RouteComponentProps & P;\n\n                const enterActionName = `${moduleName}/@@ENTER`;\n                const startTime = Date.now();\n                yield rawCall(executeAction, enterActionName, lifecycleListener.onEnter.bind(lifecycleListener), props);\n                app.logger.info({\n                    action: enterActionName,\n                    elapsedTime: Date.now() - startTime,\n                    info: {\n                        component_props: JSON.stringify(props),\n                    },\n                });\n\n                if (this.hasOwnLifecycle(\"onLocationMatched\")) {\n                    if (\"match\" in props && \"location\" in props) {\n                        const initialRenderActionName = `${moduleName}/@@LOCATION_MATCHED`;\n                        const startTime = Date.now();\n                        const routeParams = props.match.params;\n                        yield rawCall(executeAction, initialRenderActionName, lifecycleListener.onLocationMatched.bind(lifecycleListener), routeParams, props.location);\n                        app.logger.info({\n                            action: initialRenderActionName,\n                            elapsedTime: Date.now() - startTime,\n                            info: {\n                                route_params: JSON.stringify(props.match.params),\n                                history_state: JSON.stringify(props.location.state),\n                            },\n                        });\n                    } else {\n                        console.error(`[framework] Module component [${moduleName}] is non-route, use onEnter() instead of onLocationMatched()`);\n                    }\n                }\n\n                if (moduleName === startupModuleName) {\n                    createStartupPerformanceLog(`${moduleName}/@@STARTUP_PERF`);\n                }\n\n                if (this.hasOwnLifecycle(\"onTick\")) {\n                    yield rawCall(this.onTickWatcherSaga.bind(this));\n                }\n            }\n\n            private *onTickWatcherSaga() {\n                let runningIntervalTask: Task = yield fork(this.onTickSaga.bind(this));\n                while (true) {\n                    yield take(IDLE_STATE_ACTION);\n                    yield cancel(runningIntervalTask); // no-op if already cancelled\n                    const isActive: boolean = yield select((state: State) => state.idle.state === \"active\");\n                    if (isActive) {\n                        runningIntervalTask = yield fork(this.onTickSaga.bind(this));\n                    }\n                }\n            }\n\n            private *onTickSaga() {\n                const tickIntervalInMillisecond = (lifecycleListener.onTick.tickInterval || 5) * 1000;\n                const boundTicker = lifecycleListener.onTick.bind(lifecycleListener);\n                const tickActionName = `${moduleName}/@@TICK`;\n                while (true) {\n                    yield rawCall(executeAction, tickActionName, boundTicker);\n                    this.tickCount++;\n                    yield delay(tickIntervalInMillisecond);\n                }\n            }\n        };\n    }\n}\n\nfunction createStartupPerformanceLog(actionName: string): void {\n    if (window.performance && performance.timing) {\n        // For performance timing API, please refer: https://www.w3.org/blog/2012/09/performance-timing-information/\n        const now = Date.now();\n        const perfTiming = performance.timing;\n        const baseTime = perfTiming.navigationStart;\n        const duration = now - baseTime;\n        const stats: {[key: string]: number} = {};\n\n        const createStat = (key: string, timeStamp: number) => {\n            if (timeStamp >= baseTime) {\n                stats[key] = timeStamp - baseTime;\n            }\n        };\n\n        createStat(\"http_start\", perfTiming.requestStart);\n        createStat(\"http_end\", perfTiming.responseEnd);\n        createStat(\"dom_start\", perfTiming.domLoading);\n        createStat(\"dom_content\", perfTiming.domContentLoadedEventEnd); // Mostly same time with domContentLoadedEventStart\n        createStat(\"dom_end\", perfTiming.loadEventEnd); // Mostly same with domComplete/loadEventStart\n\n        const slowStartupThreshold = app.loggerConfig?.slowStartupThresholdInSecond || 5;\n        if (duration / 1000 >= slowStartupThreshold) {\n            app.logger.warn({\n                action: actionName,\n                elapsedTime: duration,\n                stats,\n                errorCode: \"SLOW_STARTUP\",\n                errorMessage: `Startup took ${(duration / 1000).toFixed(2)} sec, longer than ${slowStartupThreshold}`,\n            });\n        } else {\n            app.logger.info({\n                action: actionName,\n                elapsedTime: duration,\n                stats,\n            });\n        }\n    }\n}\n"]}