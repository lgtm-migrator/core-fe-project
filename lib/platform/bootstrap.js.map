{"version":3,"file":"bootstrap.js","sourceRoot":"","sources":["../../src/platform/bootstrap.tsx"],"names":[],"mappings":"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","sourcesContent":["import {ConnectedRouter} from \"connected-react-router\";\nimport {Location} from \"history\";\nimport React from \"react\";\nimport {createRoot} from \"react-dom/client\";\nimport {Provider} from \"react-redux\";\nimport {app} from \"../app\";\nimport {NavigationGuard} from \"./NavigationGuard\";\nimport {LoggerConfig} from \"../Logger\";\nimport {ErrorListener, executeAction} from \"../module\";\nimport {ErrorBoundary} from \"../util/ErrorBoundary\";\nimport {ajax} from \"../util/network\";\nimport {APIException} from \"../Exception\";\nimport {isIEBrowser} from \"../util/navigator-util\";\nimport {captureError, errorToException} from \"../util/error-util\";\nimport {SagaGenerator, call, delay} from \"../typed-saga\";\nimport {IdleDetector, idleTimeoutActions} from \"..\";\nimport {DEFAULT_IDLE_TIMEOUT} from \"../util/IdleDetector\";\nimport {SagaIterator} from \"redux-saga\";\n\n/**\n * Configuration for frontend version check.\n * If the `versionCheckURL` API response changes, `onRemind` will be executed.\n */\ninterface VersionCheckConfig {\n    onRemind: () => SagaGenerator;\n    versionCheckURL: string; // Must be GET Method, returning whatever JSON\n    frequencyInSecond?: number; // Default: 600 (10 min)\n}\n\n/**\n * Configuration for browser related features.\n * - onIE: Alert to user or redirect when using IE browser, because framework does not support IE.\n * - onLocationChange: A global event handler for any location change events.\n * - navigationPreventionMessage: Only useful if you are leaving some page, whose \"setNavigationPrevented\" is toggled as true.\n */\ninterface BrowserConfig {\n    onIE?: () => void;\n    onLocationChange?: (location: Location) => void;\n    navigationPreventionMessage?: string;\n}\n\ninterface BootstrapOption {\n    componentType: React.ComponentType;\n    errorListener: ErrorListener;\n    rootContainer?: HTMLElement;\n    browserConfig?: BrowserConfig;\n    loggerConfig?: LoggerConfig;\n    versionConfig?: VersionCheckConfig;\n    idleTimeoutInSecond?: number; // Default: 5 min, never Idle if non-positive value given\n}\n\nexport const LOGGER_ACTION = \"@@framework/logger\";\nexport const VERSION_CHECK_ACTION = \"@@framework/version-check\";\nexport const GLOBAL_ERROR_ACTION = \"@@framework/global\";\nexport const GLOBAL_PROMISE_REJECTION_ACTION = \"@@framework/promise-rejection\";\n\nexport function bootstrap(option: BootstrapOption): void {\n    detectIEBrowser(option.browserConfig?.onIE);\n    setupGlobalErrorHandler(option.errorListener);\n    setupAppExitListener(option.loggerConfig?.serverURL);\n    setupLocationChangeListener(option.browserConfig?.onLocationChange);\n    setupIdleTimeout(option.idleTimeoutInSecond ?? DEFAULT_IDLE_TIMEOUT);\n    runBackgroundLoop(option.loggerConfig, option.versionConfig);\n    renderRoot(option.componentType, option.rootContainer || injectRootContainer(), option.browserConfig?.navigationPreventionMessage || \"Are you sure to leave current page?\");\n}\n\nfunction detectIEBrowser(onIE?: () => void) {\n    if (isIEBrowser()) {\n        if (onIE) {\n            onIE();\n        } else {\n            let ieAlertMessage: string;\n            const navigatorLanguage = navigator.languages ? navigator.languages[0] : navigator.language;\n            if (navigatorLanguage.startsWith(\"zh\")) {\n                ieAlertMessage = \"对不起，本网站不支持 IE 浏览器\\n请使用 Chrome/Firefox/360 浏览器再访问\";\n            } else {\n                ieAlertMessage = \"This website does not support IE browser.\\nPlease use Chrome/Safari/Firefox to visit.\\nSorry for the inconvenience.\";\n            }\n            alert(ieAlertMessage);\n        }\n        // After that, the following code may still run\n    }\n}\n\nfunction setupGlobalErrorHandler(errorListener: ErrorListener) {\n    app.errorHandler = errorListener.onError.bind(errorListener);\n    window.addEventListener(\n        \"error\",\n        (event) => {\n            try {\n                const analyzeByTarget = (): string => {\n                    if (event.target && event.target !== window) {\n                        const element = event.target as HTMLElement;\n                        return `DOM source error: ${element.outerHTML}`;\n                    }\n                    return `Unrecognized error, serialized as ${JSON.stringify(event)}`;\n                };\n                captureError(event.error || event.message || analyzeByTarget(), GLOBAL_ERROR_ACTION);\n            } catch (e) {\n                /**\n                 * This should not happen normally.\n                 * However, global error handler might catch external webpage errors, and fail to parse error due to cross-origin limitations.\n                 * A typical example is: Permission denied to access property `foo`\n                 */\n                app.logger.warn({\n                    action: GLOBAL_ERROR_ACTION,\n                    errorCode: \"ERROR_HANDLER_FAILURE\",\n                    errorMessage: errorToException(e).message,\n                    elapsedTime: 0,\n                    info: {},\n                });\n            }\n        },\n        true\n    );\n    window.addEventListener(\n        \"unhandledrejection\",\n        (event) => {\n            try {\n                captureError(event.reason, GLOBAL_PROMISE_REJECTION_ACTION);\n            } catch (e) {\n                app.logger.warn({\n                    action: GLOBAL_PROMISE_REJECTION_ACTION,\n                    errorCode: \"ERROR_HANDLER_FAILURE\",\n                    errorMessage: errorToException(e).message,\n                    elapsedTime: 0,\n                    info: {},\n                });\n            }\n        },\n        true\n    );\n}\n\nfunction renderRoot(EntryComponent: React.ComponentType, rootContainer: HTMLElement, navigationPreventionMessage: string) {\n    const root = createRoot(rootContainer);\n    root.render(\n        <Provider store={app.store}>\n            <IdleDetector>\n                {/* @ts-ignore - @types/react removed default props.children in class component, and no children prop in ConnectedRouter */}\n                <ConnectedRouter history={app.browserHistory}>\n                    <NavigationGuard message={navigationPreventionMessage} />\n                    <ErrorBoundary>\n                        <EntryComponent />\n                    </ErrorBoundary>\n                </ConnectedRouter>\n            </IdleDetector>\n        </Provider>\n    );\n}\n\nfunction injectRootContainer(): HTMLElement {\n    const rootContainer = document.createElement(\"div\");\n    rootContainer.id = \"framework-app-root\";\n    document.body.appendChild(rootContainer);\n    return rootContainer;\n}\n\nfunction setupAppExitListener(eventServerURL?: string) {\n    if (eventServerURL) {\n        const isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n        window.addEventListener(\n            // Ref: https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW5\n            isIOS ? \"pagehide\" : \"unload\",\n            () => {\n                try {\n                    app.logger.info({action: \"@@EXIT\"});\n                    const logs = app.logger.collect();\n                    /**\n                     * navigator.sendBeacon() uses HTTP POST, but does not support CORS.\n                     * We have to use text/plain as content type, instead of JSON.\n                     */\n                    const textData = JSON.stringify({events: logs});\n                    navigator.sendBeacon(eventServerURL, textData);\n                } catch (e) {\n                    // Silent if sending error\n                }\n            },\n            false\n        );\n    }\n}\n\nfunction setupLocationChangeListener(listener?: (location: Location) => void) {\n    if (listener) {\n        app.browserHistory.listen(listener);\n    }\n}\n\nfunction setupIdleTimeout(timeout: number) {\n    app.store.dispatch(idleTimeoutActions(timeout));\n}\n\nfunction runBackgroundLoop(loggerConfig?: LoggerConfig, versionCheckConfig?: VersionCheckConfig) {\n    app.logger.info({action: \"@@ENTER\"});\n    app.loggerConfig = loggerConfig || null;\n\n    if (loggerConfig) {\n        app.sagaMiddleware.run(function* () {\n            while (true) {\n                yield delay((loggerConfig.frequencyInSecond || 20) * 1000);\n                yield* call(sendEventLogs);\n            }\n        });\n    }\n\n    if (versionCheckConfig) {\n        app.sagaMiddleware.run(function* () {\n            let lastChecksum: string | null = null;\n\n            while (true) {\n                yield delay((versionCheckConfig.frequencyInSecond || 600) * 1000);\n                const newChecksum = yield* call(fetchVersionChecksum, versionCheckConfig.versionCheckURL);\n                if (newChecksum) {\n                    if (lastChecksum !== null && newChecksum !== lastChecksum) {\n                        app.logger.info({\n                            action: VERSION_CHECK_ACTION,\n                            elapsedTime: 0,\n                            info: {newChecksum, lastChecksum},\n                        });\n                        yield* executeAction(VERSION_CHECK_ACTION, versionCheckConfig.onRemind);\n                    }\n                    lastChecksum = newChecksum;\n                }\n            }\n        });\n    }\n}\n\nexport async function sendEventLogs(): Promise<void> {\n    if (app.loggerConfig) {\n        const logs = app.logger.collect(200);\n        const logLength = logs.length;\n        if (logLength > 0) {\n            try {\n                /**\n                 * Event server URL may be different from current domain (supposing abc.com)\n                 *\n                 * In order to support this, we must ensure:\n                 * - Event server allows cross-origin request from current domain\n                 * - Root-domain cookies, whose domain is set by current domain as \".abc.com\", can be sent (withCredentials = true)\n                 */\n                await ajax(\"POST\", app.loggerConfig.serverURL, {}, {events: logs}, {withCredentials: true});\n                app.logger.emptyLastCollection();\n            } catch (e) {\n                if (e instanceof APIException) {\n                    // For APIException, retry always leads to same error, so have to give up\n                    // Do not log network exceptions\n                    app.logger.emptyLastCollection();\n                    app.logger.exception(e, {dropped_logs: logLength.toString()}, LOGGER_ACTION);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Only call this function if necessary, i.e: initial checksum, or after long-staying check\n * Return latest checksum, or null for failure.\n */\nasync function fetchVersionChecksum(url: string): Promise<string | null> {\n    try {\n        const startTime = Date.now();\n        const response = await ajax(\"GET\", url, {}, null);\n        const checksum = JSON.stringify(response);\n        app.logger.info({\n            action: VERSION_CHECK_ACTION,\n            elapsedTime: Date.now() - startTime,\n            info: {checksum},\n        });\n        return checksum;\n    } catch (e) {\n        if (e instanceof APIException) {\n            // Do not log network exceptions\n            app.logger.exception(e, {}, VERSION_CHECK_ACTION);\n        }\n        return null;\n    }\n}\n"]}