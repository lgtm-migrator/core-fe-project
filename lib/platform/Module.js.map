{"version":3,"file":"Module.js","sourceRoot":"","sources":["../../src/platform/Module.tsx"],"names":[],"mappings":"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","sourcesContent":["import {push} from \"connected-react-router\";\nimport {Location} from \"history\";\nimport {SagaGenerator} from \"../typed-saga\";\nimport {put} from \"redux-saga/effects\";\nimport {produce, enablePatches, enableES5} from \"immer\";\nimport {app} from \"../app\";\nimport {Logger} from \"../Logger\";\nimport {TickIntervalDecoratorFlag} from \"../module\";\nimport {navigationPreventionAction, setStateAction, State} from \"../reducer\";\n\nenableES5();\nif (process.env.NODE_ENV === \"development\") {\n    enablePatches();\n}\n\nexport type ModuleLocation<State> = Location<Readonly<State> | undefined>;\n\nexport interface ModuleLifecycleListener<RouteParam extends object = object, HistoryState extends object = object> {\n    onEnter: (entryComponentProps?: any) => SagaGenerator;\n    onDestroy: () => SagaGenerator;\n    onLocationMatched: (routeParameters: RouteParam, location: Location<Readonly<HistoryState> | undefined>) => SagaGenerator;\n    onTick: (() => SagaGenerator) & TickIntervalDecoratorFlag;\n}\n\nexport class Module<RootState extends State, ModuleName extends keyof RootState[\"app\"] & string, RouteParam extends object = object, HistoryState extends object = object> implements ModuleLifecycleListener<RouteParam, HistoryState> {\n    constructor(readonly name: ModuleName, readonly initialState: RootState[\"app\"][ModuleName]) {}\n\n    *onEnter(entryComponentProps: any): SagaGenerator {\n        /**\n         * Called when the attached component is initially mounted.\n         */\n    }\n\n    *onDestroy(): SagaGenerator {\n        /**\n         * Called when the attached component is going to unmount\n         */\n    }\n\n    *onLocationMatched(routeParam: RouteParam, location: ModuleLocation<HistoryState>): SagaGenerator {\n        /**\n         * Called when the attached component is a React-Route component and its Route location matches\n         * It is called each time the location changes, as long as it still matches\n         */\n    }\n\n    *onTick(): SagaGenerator {\n        /**\n         * Called periodically during the lifecycle of attached component\n         * Usually used together with @Interval decorator, to specify the period (in second)\n         * Attention: The next tick will not be triggered, until the current tick has finished\n         */\n    }\n\n    get state(): Readonly<RootState[\"app\"][ModuleName]> {\n        return this.rootState.app[this.name];\n    }\n\n    get rootState(): Readonly<RootState> {\n        return app.store.getState() as Readonly<RootState>;\n    }\n\n    get logger(): Logger {\n        return app.logger;\n    }\n\n    setNavigationPrevented(isPrevented: boolean) {\n        app.store.dispatch(navigationPreventionAction(isPrevented));\n    }\n\n    setState<K extends keyof RootState[\"app\"][ModuleName]>(stateOrUpdater: ((state: RootState[\"app\"][ModuleName]) => void) | Pick<RootState[\"app\"][ModuleName], K> | RootState[\"app\"][ModuleName]): void {\n        if (typeof stateOrUpdater === \"function\") {\n            const originalState = this.state;\n            const updater = stateOrUpdater as (state: RootState[\"app\"][ModuleName]) => void;\n            let patchDescriptions: string[] | undefined;\n            const newState = produce<Readonly<RootState[\"app\"][ModuleName]>, RootState[\"app\"][ModuleName]>(\n                originalState,\n                (draftState) => {\n                    // Wrap into a void function, in case updater() might return anything\n                    updater(draftState);\n                },\n                process.env.NODE_ENV === \"development\"\n                    ? (patches) => {\n                          // No need to read \"op\", in will only be \"replace\"\n                          patchDescriptions = patches.map((_) => _.path.join(\".\"));\n                      }\n                    : undefined\n            );\n            if (newState !== originalState) {\n                const description = `@@${this.name}/setState${patchDescriptions ? `[${patchDescriptions.join(\"/\")}]` : ``}`;\n                app.store.dispatch(setStateAction(this.name, newState, description));\n            }\n        } else {\n            const partialState = stateOrUpdater as object;\n            this.setState((state) => Object.assign(state, partialState));\n        }\n    }\n\n    /**\n     * CAVEAT:\n     * (1)\n     * Calling this.pushHistory to other module should cancel the following logic.\n     * Using store.dispatch here will lead to error while cancelling in lifecycle.\n     *\n     * Because the whole process is in sync mode:\n     * dispatch push action -> location change -> router component will un-mount -> lifecycle saga cancel\n     *\n     * Cancelling the current sync-running saga will throw \"TypeError: Generator is already executing\".\n     *\n     * (2)\n     * Adding yield cancel() in pushHistory is also incorrect.\n     * If this.pushHistory is only to change state rather than URL, it will lead to the whole lifecycle saga cancelled.\n     *\n     * https://github.com/react-boilerplate/react-boilerplate/issues/1281\n     */\n    pushHistory(url: string): SagaGenerator;\n    pushHistory(url: string, stateMode: \"keep-state\"): SagaGenerator;\n    pushHistory<T extends object>(url: string, state: T): SagaGenerator; // Recommended explicitly pass the generic type\n    pushHistory(state: HistoryState): SagaGenerator;\n\n    *pushHistory(urlOrState: HistoryState | string, state?: object | \"keep-state\"): SagaGenerator {\n        if (typeof urlOrState === \"string\") {\n            const url: string = urlOrState;\n            if (state) {\n                yield put(push(url, state === \"keep-state\" ? app.browserHistory.location.state : state));\n            } else {\n                yield put(push(url));\n            }\n        } else {\n            const currentURL = location.pathname + location.search;\n            const state: HistoryState = urlOrState;\n            yield put(push(currentURL, state));\n        }\n    }\n}\n"]}