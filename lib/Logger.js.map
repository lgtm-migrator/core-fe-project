{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../src/Logger.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAC,gBAAgB,EAAC,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAC,GAAG,EAAC,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAC,YAAY,EAAa,mBAAmB,EAAE,0BAA0B,EAAC,MAAM,aAAa,CAAC;AAgDrG;IAKI;QAJQ,eAAU,GAA6C,EAAE,CAAC;QAC1D,aAAQ,GAAU,EAAE,CAAC;QACrB,oBAAe,GAAG,CAAC,CAAC;QAGxB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IACpC,CAAC;IAED,+BAAU,GAAV,UAAW,OAAiD;QACxD,IAAM,aAAa,yBAAO,IAAI,CAAC,UAAU,GAAK,OAAO,CAAC,CAAC;QACvD,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;QACtD,IAAI,WAAW,GAAG,EAAE,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,0CAAmC,WAAW,kBAAe,CAAC,CAAC;SAC/E;QACD,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IACpC,CAAC;IAED,kCAAa,GAAb,UAAc,GAAW;QACrB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YACpC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SAC/B;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,yCAAkC,GAAG,oBAAiB,CAAC,CAAC;SACxE;IACL,CAAC;IAED,yBAAI,GAAJ,UAAK,KAAmB;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,yBAAI,GAAJ,UAAK,KAAoB;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,0BAAK,GAAL,UAAM,KAAoB;QACtB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,8BAAS,GAAT,UAAU,SAAoB,EAAE,SAA8C,EAAE,MAAc;QAC1F,IAAI,SAAkB,CAAC;QACvB,IAAI,SAAiB,CAAC;QACtB,IAAM,IAAI,gBAA4C,SAAS,CAAC,CAAC;QAEjE,IAAI,SAAS,YAAY,0BAA0B,EAAE;YACjD,SAAS,GAAG,IAAI,CAAC;YACjB,SAAS,GAAG,iBAAiB,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,GAAG,SAAS,CAAC,oBAAoB,CAAC;SAC7D;aAAM,IAAI,SAAS,YAAY,YAAY,EAAE;YAC1C,IAAI,SAAS,CAAC,UAAU,KAAK,GAAG,IAAI,SAAS,CAAC,SAAS,KAAK,kBAAkB,EAAE;gBAC5E,SAAS,GAAG,KAAK,CAAC;gBAClB,SAAS,GAAG,sBAAsB,CAAC;aACtC;iBAAM;gBACH,SAAS,GAAG,IAAI,CAAC;gBACjB,SAAS,GAAG,oBAAa,SAAS,CAAC,UAAU,CAAE,CAAC;aACnD;YACD,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAC9D,IAAI,SAAS,CAAC,OAAO,EAAE;gBACnB,IAAI,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC;aAC5C;YACD,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,IAAI,CAAC,gBAAgB,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC;aAChD;SACJ;aAAM,IAAI,SAAS,YAAY,mBAAmB,EAAE;YACjD,SAAS,GAAG,KAAK,CAAC;YAClB,SAAS,GAAG,kBAAkB,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;SAChE;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,yEAAyE,CAAC,CAAC;YACxF,SAAS,GAAG,KAAK,CAAC;YAClB,SAAS,GAAG,kBAAkB,CAAC;SAClC;QAED,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,EAAC,MAAM,QAAA,EAAE,SAAS,WAAA,EAAE,YAAY,EAAE,SAAS,CAAC,OAAO,EAAE,IAAI,MAAA,EAAE,WAAW,EAAE,CAAC,EAAC,CAAC,CAAC;IAC7H,CAAC;IAED,4BAAO,GAAP,UAAQ,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QACvB,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACzC,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,WAAW,EAAE;YACtC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;SAC1C;aAAM;YACH,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;YACnC,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;IACL,CAAC;IAED,wCAAmB,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC9D,CAAC;IAEO,8BAAS,GAAjB,UAAkB,MAA+B,EAAE,KAAmC;QAClF,mBAAmB;QACnB,IAAM,OAAO,GAA4B,EAAE,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,UAAC,EAAY;gBAAZ,KAAA,aAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;YAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aACxC;iBAAM;gBACH,IAAI;oBACA,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC;iBAC1B;gBAAC,OAAO,CAAC,EAAE;oBACR,IAAM,OAAO,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;oBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;oBACjC,OAAO,CAAC,IAAI,CAAC,8CAA8C,GAAG,OAAO,CAAC,CAAC;iBAC1E;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,gBAAgB;QAChB,IAAM,IAAI,GAA4B,EAAE,CAAC;QACzC,IAAI,KAAK,CAAC,IAAI,EAAE;YACZ,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,EAAY;oBAAZ,KAAA,aAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;gBACvC,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,IAAM,aAAa,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,kBAAkB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACpF,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;iBAC9E;YACL,CAAC,CAAC,CAAC;SACN;QAED,iBAAiB;QACjB,IAAM,KAAK,GAA4B,EAAE,CAAC;QAC1C,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,EAAY;oBAAZ,KAAA,aAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;gBACxC,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;iBACtB;YACL,CAAC,CAAC,CAAC;SACN;QAED,IAAM,KAAK,GAAQ;YACf,IAAI,EAAE,IAAI,IAAI,EAAE;YAChB,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,CAAC;YACnC,MAAM,QAAA;YACN,OAAO,SAAA;YACP,IAAI,MAAA;YACJ,KAAK,OAAA;YACL,SAAS,EAAE,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YAC7D,YAAY,EAAE,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SAC5F,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACL,iBAAC;AAAD,CAAC,AA/ID,IA+IC","sourcesContent":["import {loggerContext} from \"./platform/logger-context\";\nimport {errorToException} from \"./util/error-util\";\nimport {app} from \"./app\";\nimport {APIException, Exception, JavaScriptException, NetworkConnectionException} from \"./Exception\";\n\ninterface Log {\n    date: Date;\n    action: string;\n    result: \"OK\" | \"WARN\" | \"ERROR\";\n    elapsedTime: number;\n    context: {[key: string]: string}; // Indexed data for Elastic Search, key in lowercase with underscore, e.g: some_field\n    info: {[key: string]: string}; // Text data for view only, key in lowercase with underscore, e.g: some_field\n    stats: {[key: string]: number}; // Numerical data for Elastic Search and statistics, key in lowercase with underscore, e.g: some_field\n    errorCode?: string | undefined; // Naming in uppercase with underscore, e.g: SOME_ERROR\n    errorMessage?: string | undefined;\n}\n\ninterface InfoLogEntry {\n    action: string;\n    elapsedTime?: number;\n    info?: {[key: string]: string | undefined};\n    stats?: {[key: string]: number | undefined};\n}\n\ninterface ErrorLogEntry extends InfoLogEntry {\n    errorCode: string;\n    errorMessage: string;\n}\n\n/**\n * If eventLogger config is provided in non-DEV environment.\n * All collected logs will automatically sent to {serverURL} in a regular basis.\n *\n * The request will be PUT to the server in the following format:\n *      {events: Log[]}\n */\nexport interface LoggerConfig {\n    serverURL: string;\n    slowStartupThresholdInSecond?: number; // Default: 5\n    frequencyInSecond?: number; // Default: 20\n    maskedKeywords?: RegExp[];\n}\n\nexport interface Logger {\n    addContext(context: {[key: string]: string | (() => string)}): void;\n    removeContext(key: string): void;\n    info(entry: InfoLogEntry): void;\n    warn(data: ErrorLogEntry): void;\n    error(data: ErrorLogEntry): void;\n}\n\nexport class LoggerImpl implements Logger {\n    private contextMap: {[key: string]: string | (() => string)} = {};\n    private logQueue: Log[] = [];\n    private collectPosition = 0;\n\n    constructor() {\n        this.contextMap = loggerContext;\n    }\n\n    addContext(context: {[key: string]: string | (() => string)}): void {\n        const newContextMap = {...this.contextMap, ...context};\n        const contextSize = Object.keys(newContextMap).length;\n        if (contextSize > 20) {\n            console.warn(`[framework] Logger context size ${contextSize} is too large`);\n        }\n        this.contextMap = newContextMap;\n    }\n\n    removeContext(key: string): void {\n        if (this.contextMap[key] !== undefined) {\n            delete this.contextMap[key];\n        } else {\n            console.warn(`[framework] Logger context key ${key} does not exist`);\n        }\n    }\n\n    info(entry: InfoLogEntry): void {\n        this.createLog(\"OK\", entry);\n    }\n\n    warn(entry: ErrorLogEntry): void {\n        this.createLog(\"WARN\", entry);\n    }\n\n    error(entry: ErrorLogEntry): void {\n        this.createLog(\"ERROR\", entry);\n    }\n\n    exception(exception: Exception, extraInfo: {[key: string]: string | undefined}, action: string): void {\n        let isWarning: boolean;\n        let errorCode: string;\n        const info: {[key: string]: string | undefined} = {...extraInfo};\n\n        if (exception instanceof NetworkConnectionException) {\n            isWarning = true;\n            errorCode = \"NETWORK_FAILURE\";\n            info[\"api_url\"] = exception.requestURL;\n            info[\"original_message\"] = exception.originalErrorMessage;\n        } else if (exception instanceof APIException) {\n            if (exception.statusCode === 400 && exception.errorCode === \"VALIDATION_ERROR\") {\n                isWarning = false;\n                errorCode = \"API_VALIDATION_ERROR\";\n            } else {\n                isWarning = true;\n                errorCode = `API_ERROR_${exception.statusCode}`;\n            }\n            info[\"api_url\"] = exception.requestURL;\n            info[\"api_response\"] = JSON.stringify(exception.responseData);\n            if (exception.errorId) {\n                info[\"api_error_id\"] = exception.errorId;\n            }\n            if (exception.errorCode) {\n                info[\"api_error_code\"] = exception.errorCode;\n            }\n        } else if (exception instanceof JavaScriptException) {\n            isWarning = false;\n            errorCode = \"JAVASCRIPT_ERROR\";\n            info[\"app_state\"] = JSON.stringify(app.store.getState().app);\n        } else {\n            console.warn(\"[framework] Exception class should not be extended, throw Error instead\");\n            isWarning = false;\n            errorCode = \"JAVASCRIPT_ERROR\";\n        }\n\n        this.createLog(isWarning ? \"WARN\" : \"ERROR\", {action, errorCode, errorMessage: exception.message, info, elapsedTime: 0});\n    }\n\n    collect(maxSize: number = 0): ReadonlyArray<Log> {\n        const totalLength = this.logQueue.length;\n        if (maxSize > 0 && maxSize < totalLength) {\n            this.collectPosition = maxSize;\n            return this.logQueue.slice(0, maxSize);\n        } else {\n            this.collectPosition = totalLength;\n            return this.logQueue;\n        }\n    }\n\n    emptyLastCollection(): void {\n        this.logQueue = this.logQueue.slice(this.collectPosition);\n    }\n\n    private createLog(result: \"OK\" | \"WARN\" | \"ERROR\", entry: InfoLogEntry | ErrorLogEntry): void {\n        // Generate context\n        const context: {[key: string]: string} = {};\n        Object.entries(this.contextMap).map(([key, value]) => {\n            if (typeof value === \"string\") {\n                context[key] = value.substr(0, 1000);\n            } else {\n                try {\n                    context[key] = value();\n                } catch (e) {\n                    const message = errorToException(e).message;\n                    context[key] = \"ERR# \" + message;\n                    console.warn(\"[framework] Fail to execute logger context: \" + message);\n                }\n            }\n        });\n\n        // Generate info\n        const info: {[key: string]: string} = {};\n        if (entry.info) {\n            Object.entries(entry.info).map(([key, value]) => {\n                if (value !== undefined) {\n                    const isBuiltinInfo = [\"app_state\", \"stacktrace\", \"extra_stacktrace\"].includes(key);\n                    info[key] = isBuiltinInfo ? value.substr(0, 500000) : value.substr(0, 500);\n                }\n            });\n        }\n\n        // Generate stats\n        const stats: {[key: string]: number} = {};\n        if (entry.stats) {\n            Object.entries(entry.stats).map(([key, value]) => {\n                if (value !== undefined) {\n                    stats[key] = value;\n                }\n            });\n        }\n\n        const event: Log = {\n            date: new Date(),\n            action: entry.action,\n            elapsedTime: entry.elapsedTime || 0,\n            result,\n            context,\n            info,\n            stats,\n            errorCode: \"errorCode\" in entry ? entry.errorCode : undefined,\n            errorMessage: \"errorMessage\" in entry ? entry.errorMessage.substring(0, 1000) : undefined,\n        };\n        this.logQueue.push(event);\n    }\n}\n"]}